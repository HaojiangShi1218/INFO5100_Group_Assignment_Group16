/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.WorkAreas.AdminRole;


import info5100.university.example.College.College;
import info5100.university.example.Department.Department;
import info5100.university.example.Persona.AdminDirectory;
import info5100.university.example.Persona.AdminProfile;
import info5100.university.example.Persona.Faculty.FacultyDirectory;
import info5100.university.example.Persona.Faculty.FacultyProfile;
import info5100.university.example.Persona.Faculty.UserAccountDirectory;
import info5100.university.example.Persona.Person;
import info5100.university.example.Persona.PersonDirectory;
import info5100.university.example.Persona.StudentDirectory;
import info5100.university.example.Persona.StudentProfile;
import info5100.university.example.Persona.UserAccount;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kal bugrara
 */
public class ManageStudentJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageSuppliersJPanel
     */
    JPanel CardSequencePanel;
    Department department;
    College college;
    //UserAccount selecteduseraccount;


    public ManageStudentJPanel(College cc, Department dd, JPanel jp) {
        CardSequencePanel = jp;
        college = cc;
        department = dd;
        initComponents();
        //populateRoleCombo();
        refreshTable();

    }

    public void refreshTable() {

//clear supplier table
        int rc = tblStudent.getRowCount();
        int i;
        for (i = rc - 1; i >= 0; i--) {
            ((DefaultTableModel) tblStudent.getModel()).removeRow(i);
        }



        StudentDirectory sd = department.getStudentDirectory();

       

        for (StudentProfile sp : sd.getStudentlist()) {
            Person student = sp.getPerson();
            Object[] row = new Object[5];
            row[0] = student;
            row[1] = student.getName();
            row[2] = sp.getDepartment();
            row[3] = student.getEmail();
            row[4] = student.getPhone();

            ((DefaultTableModel) tblStudent.getModel()).addRow(row);
        }

    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblStudent = new javax.swing.JTable();
        btnView = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();

        setLayout(null);

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack);
        btnBack.setBounds(40, 20, 80, 23);

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        add(btnDelete);
        btnDelete.setBounds(650, 640, 80, 23);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel1.setText("Student Records");
        add(jLabel1);
        jLabel1.setBounds(30, 60, 190, 17);

        jLabel2.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel2.setText("Manage Student Records");
        add(jLabel2);
        jLabel2.setBounds(170, 20, 280, 28);

        tblStudent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Department", "Email", "Phone"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblStudent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblStudentMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblStudent);

        add(jScrollPane1);
        jScrollPane1.setBounds(30, 80, 920, 540);

        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });
        add(btnView);
        btnView.setBounds(30, 640, 78, 23);

        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });
        add(btnRefresh);
        btnRefresh.setBounds(180, 640, 75, 23);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        //CardSequencePanel.remove(this);
        //((java.awt.CardLayout) CardSequencePanel.getLayout()).next(CardSequencePanel);
 //       ((java.awt.CardLayout)CardSequencePanel.getLayout()).show(CardSequencePanel, "IdentifyEventTypes");
        ((java.awt.CardLayout) CardSequencePanel.getLayout()).show(CardSequencePanel, "Admin");
        CardSequencePanel.revalidate();
        CardSequencePanel.repaint();

    }//GEN-LAST:event_btnBackActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblStudent.getSelectedRow();
        if (selectedRow >= 0) {
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(null, "You sure you want to delete this student?", "Warning", dialogButton);
            if (dialogResult == JOptionPane.YES_OPTION) {
                Person selectedStudent = (Person) tblStudent.getValueAt(selectedRow, 0);
                StudentProfile selectedStudentProfile = department.getStudentDirectory().findStudent(selectedStudent.getPersonId());
                department.getStudentDirectory().deleteStudent(selectedStudentProfile);
                JOptionPane.showMessageDialog(null, "Student successfully deleted!", "Information", JOptionPane.INFORMATION_MESSAGE);
            }
        }
        else {
            JOptionPane.showMessageDialog(null, "Please select a student from the list", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        refreshTable();

    }//GEN-LAST:event_btnDeleteActionPerformed

    private void tblStudentMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblStudentMousePressed
        // Extracts the row (uaser account) in the table that is selected by the user
//        int siztblFacultyable.getRowCount();
//        int selectedrotblFacultyable.getSelectionModel().getLeadSelectionIndex();
//
//        if (selectedrow < 0 || selectedrow > size - 1) {
//            return;
//        }
//        selecteduseraccount = (UserAccoutblFacultyable.getValueAt(selectedrow, 0);
//        if (selecteduseraccount == null) {
//            return;
//        }
        
            
    }//GEN-LAST:event_tblStudentMousePressed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblStudent.getSelectedRow();
        if (selectedRow >= 0) {
            Person selectedStudent = (Person) tblStudent.getValueAt(selectedRow, 0);
            StudentProfile selectedStudentProfile = department.getStudentDirectory().findStudent(selectedStudent.getPersonId());
            ViewStudentJPanel vs = new ViewStudentJPanel(CardSequencePanel, college, department, selectedStudentProfile);

            CardSequencePanel.add("ViewStudentJPanel", vs);
            //((java.awt.CardLayout) CardSequencePanel.getLayout()).next(CardSequencePanel);
            ((java.awt.CardLayout) CardSequencePanel.getLayout()).show(CardSequencePanel, "ViewStudentJPanel");
            CardSequencePanel.revalidate();
            CardSequencePanel.repaint();
        }
        else {
            JOptionPane.showMessageDialog(null, "Please select a faculty from the list", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        refreshTable();
    }//GEN-LAST:event_btnRefreshActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnView;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblStudent;
    // End of variables declaration//GEN-END:variables
    
//    private void populateRoleCombo() {
//        cmbRole.removeAllItems();
//        cmbRole.addItem("Student");
//        cmbRole.addItem("Faculty");
//        cmbRole.addItem("Admin");
//    }
    
}

