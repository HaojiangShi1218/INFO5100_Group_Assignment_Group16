/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.WorkAreas.AdminRole;


import info5100.university.example.Department.Department;
import info5100.university.example.Persona.AdminDirectory;
import info5100.university.example.Persona.AdminProfile;
import info5100.university.example.Persona.Faculty.FacultyDirectory;
import info5100.university.example.Persona.Faculty.FacultyProfile;
import info5100.university.example.Persona.Faculty.UserAccountDirectory;
import info5100.university.example.Persona.Person;
import info5100.university.example.Persona.PersonDirectory;
import info5100.university.example.Persona.Registrar.RegistrarDirectory;
import info5100.university.example.Persona.Registrar.RegistrarProfile;
import info5100.university.example.Persona.StudentDirectory;
import info5100.university.example.Persona.StudentProfile;
import info5100.university.example.Persona.UserAccount;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kal bugrara
 */
public class ManageUserAccountsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageSuppliersJPanel
     */
    JPanel CardSequencePanel;
    Department department;
    UserAccount selecteduseraccount;


    public ManageUserAccountsJPanel(Department dd, JPanel jp) {
        CardSequencePanel = jp;
        department = dd;
        initComponents();
        populateProfileCombo();
        refreshTable();

    }

    public void refreshTable() {

//clear supplier table
        int rc = UserAccountTable.getRowCount();
        int i;
        for (i = rc - 1; i >= 0; i--) {
            ((DefaultTableModel) UserAccountTable.getModel()).removeRow(i);
        }



        UserAccountDirectory uad = department.getUseraccountdirectory();

       

        for (UserAccount ua : uad.getUserAccountList()) {

            Object[] row = new Object[5];
            row[0] = ua;
            row[1] = ua.getAssociatedPersonProfile().getPerson().getName(); //complete this..
            row[2] = ua.getRole();

            ((DefaultTableModel) UserAccountTable.getModel()).addRow(row);
        }

    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        UserAccountTable = new javax.swing.JTable();
        btnView = new javax.swing.JButton();
        btnCreate = new javax.swing.JButton();
        lblUsername1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblUsername = new javax.swing.JLabel();
        fieldUsername = new javax.swing.JTextField();
        lblPassword = new javax.swing.JLabel();
        fieldPassword = new javax.swing.JTextField();
        cmbProfile = new javax.swing.JComboBox<>();

        setLayout(null);

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack);
        btnBack.setBounds(40, 20, 80, 23);

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        add(btnDelete);
        btnDelete.setBounds(560, 510, 80, 23);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel1.setText("User Accounts");
        add(jLabel1);
        jLabel1.setBounds(30, 50, 190, 17);

        jLabel2.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel2.setText("Manage User Accounts");
        add(jLabel2);
        jLabel2.setBounds(190, 20, 250, 28);

        UserAccountTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Username", "Name", "Role"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        UserAccountTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                UserAccountTableMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(UserAccountTable);

        add(jScrollPane1);
        jScrollPane1.setBounds(30, 70, 610, 420);

        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });
        add(btnView);
        btnView.setBounds(30, 510, 78, 23);

        btnCreate.setText("Create");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });
        add(btnCreate);
        btnCreate.setBounds(740, 230, 72, 23);

        lblUsername1.setText("Profile");
        add(lblUsername1);
        lblUsername1.setBounds(660, 110, 60, 17);

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        jLabel3.setText("Create an Account ");
        add(jLabel3);
        jLabel3.setBounds(660, 70, 209, 29);

        lblUsername.setText("Username");
        add(lblUsername);
        lblUsername.setBounds(660, 150, 59, 17);

        fieldUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldUsernameActionPerformed(evt);
            }
        });
        add(fieldUsername);
        fieldUsername.setBounds(740, 150, 180, 23);

        lblPassword.setText("Password");
        add(lblPassword);
        lblPassword.setBounds(660, 190, 58, 17);

        fieldPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldPasswordActionPerformed(evt);
            }
        });
        add(fieldPassword);
        fieldPassword.setBounds(740, 190, 180, 23);

        cmbProfile.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(cmbProfile);
        cmbProfile.setBounds(740, 110, 180, 23);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        //CardSequencePanel.remove(this);
        //((java.awt.CardLayout) CardSequencePanel.getLayout()).next(CardSequencePanel);
 //       ((java.awt.CardLayout)CardSequencePanel.getLayout()).show(CardSequencePanel, "IdentifyEventTypes");
        ((java.awt.CardLayout) CardSequencePanel.getLayout()).show(CardSequencePanel, "Admin");
        CardSequencePanel.revalidate();
        CardSequencePanel.repaint();

    }//GEN-LAST:event_btnBackActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRow = UserAccountTable.getSelectedRow();
        if (selectedRow >= 0) {
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(null, "You sure you want to delete this account?", "Warning", dialogButton);
            if (dialogResult == JOptionPane.YES_OPTION) {
                UserAccount selectedUserAccount = (UserAccount) UserAccountTable.getValueAt(selectedRow, 0);
                department.getUseraccountdirectory().deleteAccount(selectedUserAccount);
                JOptionPane.showMessageDialog(null, "Account successfully deleted!", "Information", JOptionPane.INFORMATION_MESSAGE);
            }
        }
        else {
            JOptionPane.showMessageDialog(null, "Please select an account from the list", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        refreshTable();

    }//GEN-LAST:event_btnDeleteActionPerformed

    private void UserAccountTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UserAccountTableMousePressed
        // Extracts the row (uaser account) in the table that is selected by the user
        int size = UserAccountTable.getRowCount();
        int selectedrow = UserAccountTable.getSelectionModel().getLeadSelectionIndex();

        if (selectedrow < 0 || selectedrow > size - 1) {
            return;
        }
        selecteduseraccount = (UserAccount) UserAccountTable.getValueAt(selectedrow, 0);
        if (selecteduseraccount == null) {
            return;
        }
        
            
    }//GEN-LAST:event_UserAccountTableMousePressed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        int selectedRow = UserAccountTable.getSelectedRow();
        if (selectedRow >= 0) {
            UserAccount selectedUserAccount = (UserAccount) UserAccountTable.getValueAt(selectedRow, 0);
            ViewUserAccountsJPanel vua = new ViewUserAccountsJPanel(CardSequencePanel, selectedUserAccount);

            CardSequencePanel.add("ViewUserAccountsJPanel", vua);
            //((java.awt.CardLayout) CardSequencePanel.getLayout()).next(CardSequencePanel);
            ((java.awt.CardLayout) CardSequencePanel.getLayout()).show(CardSequencePanel, "ViewUserAccountsJPanel");
            CardSequencePanel.revalidate();
            CardSequencePanel.repaint();
        }
        else {
            JOptionPane.showMessageDialog(null, "Please select an account from the list", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        // TODO add your handling code here:
        //String name = fieldName.getText();
        String username = fieldUsername.getText();
        String password = fieldPassword.getText();
        UserAccountDirectory uadirectory = department.getUseraccountdirectory();

        if (username.isBlank() || password.isBlank()) {
            JOptionPane.showMessageDialog(null, "Please fill out all fields");
            return;
        }
        
        Person selectedPerson = department.getPersonDirectory().findPersonName(String.valueOf(cmbProfile.getSelectedItem()));
        
        UserAccount newUser = uadirectory.newUserAccount(selectedPerson.getProfile(), username, password);
        selectedPerson.setAccount(newUser);

        JOptionPane.showMessageDialog(this, "New account created!", "Success", JOptionPane.INFORMATION_MESSAGE);
        
        fieldUsername.setText("");
        fieldPassword.setText("");
        
        refreshTable();
        populateProfileCombo();
    }//GEN-LAST:event_btnCreateActionPerformed

    private void fieldUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldUsernameActionPerformed

    private void fieldPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldPasswordActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable UserAccountTable;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnView;
    private javax.swing.JComboBox<String> cmbProfile;
    private javax.swing.JTextField fieldPassword;
    private javax.swing.JTextField fieldUsername;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JLabel lblUsername1;
    // End of variables declaration//GEN-END:variables
    
    
    private void populateProfileCombo() {
        cmbProfile.removeAllItems();
        for (Person pp: department.getPersonDirectory().getPersonlist()) {
            if (pp.getAccount() == null && pp.getProfile() != null) {
                cmbProfile.addItem(pp.getName());
                
            }
        }
    }
}

